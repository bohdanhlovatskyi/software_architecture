version: '0'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    expose:
      - "9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # - KAFKA_ADVERTISED_HOST_NAME=kafka
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--bootstrap-server", "kafka:9092"]
      interval: 5s
      timeout: 10s
      retries: 10

  init-kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic message --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "

  logging-db-node-1:
    image: hazelcast/hazelcast:5.2.1
    container_name: logging-db-node-1
    ports:
    - "5701:5701"
    environment:
    - HZ_CLUSTERNAME=hz_cls

  logging-db-node-2:
    image: hazelcast/hazelcast:5.2.1
    container_name: logging-db-node-2
    ports:
    - "5702:5701"
    environment:
    - HZ_CLUSTERNAME=hz_cls

  logging-db-node-3:
    image: hazelcast/hazelcast:5.2.1
    container_name: logging-db-node-3
    ports:
    - "5703:5701"
    environment:
    - HZ_CLUSTERNAME=hz_cls

  # logging-management-center:
  #   image: hazelcast/management-center:5.2.1
  #   container_name: logging-management-center
  #   ports:
  #   - "9000:8080"
  #   environment:
  #   - HZ_CLUSTERNAME=hz_cls
